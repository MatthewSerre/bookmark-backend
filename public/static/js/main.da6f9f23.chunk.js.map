{"version":3,"sources":["actions/deleteFolder.js","components/folders.js","components/folderInput.js","actions/addFolder.js","components/bookmarkInput.js","actions/addBookmark.js","components/bookmarks.js","actions/deleteBookmark.js","components/allBookmarks.js","actions/fetchFolders.js","containers/bookmarksContainer.js","components/folder.js","containers/foldersContainer.js","components/about.js","components/home.js","App.js","index.js","reducers/folderReducer.js"],"names":["deleteFolder","folderId","dispatch","fetch","method","then","res","json","folder","type","payload","connect","props","className","folders","map","ListGroup","Item","to","id","name","bookmarks","length","description","Button","variant","onClick","e","window","confirm","handleDelete","FolderInput","state","handleOnChange","event","setState","target","value","handleOnSubmit","preventDefault","addFolder","Form","onSubmit","this","Group","controlId","Label","Control","onChange","placeholder","as","rows","React","Component","data","headers","body","JSON","stringify","BookmarkInput","url","notes","addBookmark","bookmark","deleteBookmark","bookmarkId","href","rel","folder_id","AllBookmarks","fetchFolders","BookmarksContainer","Fragment","path","render","exact","routerProps","Row","Col","Container","filter","match","params","FoldersContainer","component","About","Home","App","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Link","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","action","foldersAfterBookmarkDelete","foldersAfterDelete","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.da6f9f23.chunk.js","sourcesContent":["export const deleteFolder = (folderId) => {\n\n    return (dispatch) => {\n        // localhost\n        fetch(`/api/v1/folders/${folderId}`, {\n            method: 'DELETE'\n        })\n        .then(res => res.json())\n        .then(folder => dispatch({type: 'DELETE_FOLDER', payload: folder}))\n    }\n\n}","import React from 'react'\nimport {Link} from 'react-router-dom'\nimport {Button, ListGroup} from \"react-bootstrap\";\nimport {deleteFolder} from '../actions/deleteFolder'\nimport {connect} from 'react-redux'\n\nconst Folders = (props) => { \n\n    const handleDelete = (folder) => {\n        props.deleteFolder(folder.id)\n    }\n\n    return (\n        <div className=\"container\">\n            {props.folders.map(folder =>\n                    <ListGroup>\n                        <ListGroup.Item>\n                            <h5><Link to={`/folders/${folder.id}`}>{folder.name}</Link></h5>\n                            <h6>{folder ? folder.bookmarks.length === 1 ? `${folder.bookmarks.length} Bookmark` : `${folder.bookmarks.length} Bookmarks` : null}</h6>\n                            <p><i>{folder.description}</i></p>\n                            <Button variant=\"danger\" onClick={e =>\n                                    window.confirm('Delete folder and all associated bookmarks?') &&\n                                    handleDelete(folder)\n                                } type=\"submit\">Delete Folder\n                            </Button>\n                            </ListGroup.Item>\n                            <br />\n                    </ListGroup>\n            )}\n\n        </div>\n    )\n\n}\n\nexport default connect(null, {deleteFolder})(Folders)","import React from 'react';\nimport {connect} from 'react-redux'\nimport {addFolder} from '../actions/addFolder'\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\n\nclass FolderInput extends React.Component {\n\n    state = {name: ''}\n\n    handleOnChange = (event) => {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    handleOnSubmit = (event) => {\n        event.preventDefault()\n        this.props.addFolder(this.state)\n        this.setState({name: \"\", description: ''})\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Form onSubmit={this.handleOnSubmit}>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Create a New Folder</Form.Label>\n                        <Form.Control type=\"text\" name=\"name\" onChange={this.handleOnChange} placeholder=\"Folder Name\" value={this.state.name}/><br />\n                        <Form.Control as=\"textarea\" rows=\"3\" name=\"description\" onChange={this.handleOnChange} placeholder=\"Folder Description\" value={this.state.description}/>\n                    </Form.Group>\n                    <Button variant=\"primary\" type=\"submit\">\n                        Create Folder\n                    </Button>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, {addFolder})(FolderInput)","export function addFolder(data) {\n    return (dispatch) => {\n        // localhost\n        fetch(`/api/v1/folders`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify(data)\n        })\n        .then(res => res.json())\n        .then(folder => dispatch({type: 'ADD_FOLDER', payload: folder}))\n    }\n}\n","import React from 'react';\nimport {connect} from 'react-redux'\nimport {addBookmark} from '../actions/addBookmark'\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nclass BookmarkInput extends React.Component {\n\n    state = {name: '', url: '', notes: ''}\n\n    handleOnChange = (event) => {\n        this.setState({[event.target.name]: event.target.value})\n    }\n\n    handleOnSubmit = (event) => {\n        event.preventDefault()\n        this.props.addBookmark(this.state, this.props.folder.id)\n        this.setState({name: '', url: '', notes: ''})\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Form onSubmit={this.handleOnSubmit}>\n                    <Form.Group>\n                    <ListGroup>\n                    <ListGroup.Item><strong>Add a New Bookmark</strong></ListGroup.Item><br />\n                        </ListGroup>\n   <Form.Control type=\"text\" name=\"name\" onChange={this.handleOnChange} placeholder=\"Name\" value={this.state.name}/><br/>\n                        <Form.Control type=\"text\" name=\"url\" onChange={this.handleOnChange} placeholder=\"URL\" value={this.state.url}/><br/>\n                        <Form.Control as=\"textarea\" rows=\"3\" name=\"notes\" onChange={this.handleOnChange} placeholder=\"Notes\" value={this.state.notes}/><br/>\n                        <Button variant=\"primary\" type=\"submit\">\n                            Add Bookmark\n                        </Button>\n\n                    </Form.Group>\n                </Form>\n            </div>\n        )\n    }\n}\n\nexport default connect(null, {addBookmark})(BookmarkInput)","export function addBookmark(bookmark, folderId) {\n    return (dispatch) => {\n        // localhost\n        fetch(`/api/v1/folders/${folderId}/bookmarks`, {\n            headers: {\n                'Content-Type': 'application/json',\n                'Accept': 'application/json'\n            },\n            method: 'POST',\n            body: JSON.stringify(bookmark)\n        })\n        .then(res => res.json())\n        .then(bookmark => dispatch({type: 'ADD_BOOKMARK', payload: bookmark}))\n    }\n}\n","import React from 'react'\nimport {connect} from 'react-redux'\nimport {deleteBookmark} from '../actions/deleteBookmark'\nimport {Button, ListGroup} from \"react-bootstrap\";\n\nconst Bookmarks = (props) => { \n\n    const handleDelete = (bookmark) => {\n        props.deleteBookmark(bookmark.id, bookmark.folder_id)\n    }\n\n    return (\n        <div>\n            {props.bookmarks && props.bookmarks.map(bookmark =>\n                <div>\n                    <ListGroup>\n                        <ListGroup.Item>\n                            <strong>{bookmark.name}</strong><br />\n                            <a href={bookmark.url} target=\"_blank\" rel=\"noopener noreferrer\">Link</a><br />\n                            <p><i>{bookmark.notes}</i></p>\n                            <Button variant=\"danger\" onClick={e =>\n                                window.confirm('Delete bookmark?') &&\n                                handleDelete(bookmark)\n                                }\n                            >Delete</Button>\n                        </ListGroup.Item>\n                    </ListGroup>\n                    <br/>\n                </div>\n            )}\n        </div>\n    )\n\n}\n\nexport default connect(null, {deleteBookmark})(Bookmarks)","export const deleteBookmark = (bookmarkId, folderId) => {\n\n    return (dispatch) => {\n        // localhost\n        fetch(`/api/v1/folders/${folderId}/bookmarks/${bookmarkId}`, {\n            method: 'DELETE'\n        })\n        .then(res => res.json())\n        .then(folder => dispatch({type: 'DELETE_BOOKMARK', payload: folder}))\n    }\n\n}","import React from 'react'\nimport Bookmarks from './bookmarks'\n\nconst AllBookmarks = (props) => {\n    return (\n        <div className=\"container\">\n            {props.folders.map(folder =>\n                <Bookmarks bookmarks={folder.bookmarks}/>\n            )}\n        </div>\n    )\n}\n\nexport default AllBookmarks","export function fetchFolders() {\n    return (dispatch) => {\n    // localhost\n    fetch(`/api/v1/folders`)\n    .then(res => res.json())\n    .then(folders => dispatch({\n        type: 'FETCH_FOLDERS',\n        payload: folders\n    }))\n    }\n}","import React from 'react'\nimport BookmarkInput from '../components/bookmarkInput'\nimport Bookmarks from '../components/bookmarks'\nimport {Row, Col, Container} from \"react-bootstrap\";\nimport {Route, Switch} from 'react-router-dom'\nimport AllBookmarks from '../components/allBookmarks'\nimport {connect} from 'react-redux';\nimport {fetchFolders} from '../actions/fetchFolders'\n\nclass BookmarksContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchFolders()\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Switch>\n                    <Route path=\"/bookmarks\" render={() => <AllBookmarks folders={this.props.folders}/>}/>\n                    <Route exact path=\"/folders/:id\" render={(routerProps) =>\n                        <React.Fragment>\n                            <Row>\n                                <Col>\n                                    <BookmarkInput {...routerProps} folder={this.props.folder}/>\n                                </Col>\n                                <Col>\n                                    <Container>\n                                        <Bookmarks {...routerProps} bookmarks={this.props.folder && this.props.folder.bookmarks}/>\n                                    </Container>\n                                </Col>\n                            </Row>\n                        </React.Fragment>}\n                    />\n                </Switch>\n                </React.Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        folders: state.folders\n    }\n}\n\nexport default connect(mapStateToProps, {fetchFolders})(BookmarksContainer);","\nimport React from 'react'\nimport {deleteFolder} from '../actions/deleteFolder'\nimport {connect} from 'react-redux'\nimport {Row, Col, ListGroup} from \"react-bootstrap\";\nimport BookmarksContainer from '../containers/bookmarksContainer'\n\nconst Folder = (props) => {\n\n    let folder = props.folders.filter(folder => folder.id == props.match.params.id)[0]\n\n    return (\n        <React.Fragment>\n            <Row>\n                <Col>\n                    <ListGroup>\n                        <ListGroup.Item>\n                            <h5><strong>{folder ? folder.name : null}</strong></h5>\n                            <h6>{folder ? folder.bookmarks.length === 1 ? `${folder.bookmarks.length} Bookmark` : `${folder.bookmarks.length} Bookmarks` : null}</h6>\n                            <p><i>{folder ? folder.description : null}</i></p>\n                        </ListGroup.Item>\n                    </ListGroup><br />\n                </Col>\n            </Row>\n            <BookmarksContainer folder={folder}/>\n        </React.Fragment>\n    )\n}\n\nexport default connect(null, {deleteFolder})(Folder)","import React from 'react';\nimport Folders from '../components/folders'\nimport {Route, Switch} from 'react-router-dom'\nimport FolderInput from '../components/folderInput'\nimport Folder from '../components/folder'\nimport {fetchFolders} from '../actions/fetchFolders'\nimport {connect} from 'react-redux';\n\nclass FoldersContainer extends React.Component {\n\n    componentDidMount() {\n        this.props.fetchFolders()\n    }\n\n    render() {\n        return (\n            <Switch>\n                <Route exact path=\"/folders/new\" component={FolderInput}/>\n                <Route path=\"/folders/:id\" render={(routerProps) => <Folder {...routerProps} folders={this.props.folders}/>} />\n                <Route exact path=\"/folders\" render={() => <Folders folders={this.props.folders}/>} />\n            </Switch>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        folders: state.folders\n    }\n}\n\nexport default connect(mapStateToProps, {fetchFolders})(FoldersContainer);","import React from 'react'\n\nconst About = () => {\n    return (\n        <div className=\"container\">\n            Top Marks was built using a Ruby on Rails backend to provide an API and a React/Redux frontend to send and receive and render data.  Read more on GitHub.\n        </div>\n    )\n}\n\nexport default About","import React from 'react'\n\nconst Home = () => {\n    return (\n        <div className=\"container\">\n            <p>Welcome to Top Marks, an app for storing your bookmarks.  Navigate above to create a new folder and start adding bookmarks to it or view your existing folders and the bookmarks within.</p>\n        </div>\n    )\n}\n\nexport default Home","\nimport React from 'react';\nimport FoldersContainer from './containers/foldersContainer'\nimport {\n  Route,\n  Link\n} from \"react-router-dom\";\nimport {Navbar, Nav} from \"react-bootstrap\";\nimport About from './components/about'\nimport Home from './components/home'\nimport BookmarksContainer from './containers/bookmarksContainer'\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar bg=\"light\" expand=\"lg\">\n          <Navbar.Brand href=\"/\">Top Marks</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link as={Link} to=\"/folders/new\">Create a New Folder</Nav.Link>\n              <Nav.Link as={Link} to=\"/bookmarks\">All Bookmarks</Nav.Link>\n              <Nav.Link as={Link} to=\"/folders\">My Folders</Nav.Link>\n              <Nav.Link as={Link} to=\"/about\">About</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar><br />\n        <Route path=\"/about\" component={About}/>\n        <Route exact path=\"/\" component={Home}/>\n        <FoldersContainer />\n        <Route exact path=\"/bookmarks\" component={BookmarksContainer}/>\n     </div>\n    );\n  }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore, applyMiddleware, compose} from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux'\nimport App from './App';\nimport folderReducer from './reducers/folderReducer'\nimport {BrowserRouter as Router} from 'react-router-dom'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet store = createStore(folderReducer, composeEnhancers(applyMiddleware(thunk)))\n\nReactDOM.render(\n\n    <Provider store={store}>\n        <Router>\n            <App />\n        </Router>\n    </Provider>\n        ,\n    document.getElementById('root'));","export default function folderReducer(state = {folders: []}, action) {\n    switch (action.type) {\n        case 'FETCH_FOLDERS':\n            return {folders: action.payload}\n        case 'ADD_FOLDER':\n            return {...state, folders: [...state.folders, action.payload]}\n        case 'ADD_BOOKMARK':\n            let folders = state.folders.map(folder => {\n                if (folder.id === action.payload.id) {\n                    return action.payload\n                }\n                else {\n                    return folder\n                }\n            })\n            return {...state, folders: folders}\n        case 'DELETE_BOOKMARK':\n            let foldersAfterBookmarkDelete = state.folders.map(folder => {\n                if (folder.id === action.payload.id) {\n                    return action.payload\n                }\n                else {\n                    return folder\n                }\n            })\n            return {...state, folders: foldersAfterBookmarkDelete}\n        case 'DELETE_FOLDER':\n            let foldersAfterDelete = state.folders.filter(folder => {\n                if (folder.id !== action.payload.id) {\n                    return folder\n                }\n            })\n            return {...state, folders: foldersAfterDelete}\n        default:\n            return state\n    }\n}"],"sourceRoot":""}